library(cruiser)
due_every
maintenance_history
library(cruiser)
maintenance_history
maintenance_history
due_every
devtools::use_data_raw()
install.packages(devtools)
install.packages("devtools")
devtools::use_data_raw()
library(cruiser)
maintenance_history
help(due_every)
??due_every
cruiser::due_every
help(cruiser::due_every)
??cruiser::due_every
library(cruiser)
maintenance_history
library(cruiser)
library(cruiser)
library(cruiser)
library(cruiser)
maintenance_history
library(cruiser)
maintenance_history
library(cruiser)
library(cruiser)
library(cruiser)
library(cruiser)
maintenance_history
install.packages("roxygen2")
library(cruiser)
Sys.getenv()
Sys.info()
library(cruiser)
install.packages('tidyverse')
library(cruiser)
library(cruiser)
library(cruiser)
library(cruiser)
maintenance_report(maintenance_history)
library(cruiser)
library(cruiser)
maintenance_report(maintenance_history)
library(cruiser)
library(cruiser)
library(cruiser)
maintenance_report(maintenance_history)
library(cruiser)
maintenance_report(maintenance_history)
library(cruiser)
maintenance_report(maintenance_history)
library(cruiser)
maintenance_report(maintenance_history)
library(cruiser)
maintenance_report(maintenance_history)
maintenance_report(maintenance_history)
library(cruiser)
maintenance_report(maintenance_history)
library(cruiser)
maintenance_report(maintenance_history)
maintenance_report(maintenance_history, 169000)
library(cruiser)
maintenance_report(maintenance_history, 169000)
library(cruiser)
maintenance_report(maintenance_history, 169000)
library(cruiser)
library(cruiser)
maintenance_history
due_every
maintenance_report(maintenance_history, 169000)
maintenance_history
due %>% select(-one_of('notes'), one_of('notes'))
#' package
#' @param current_mileage current mileage of truck
#' @return  A dataframe with items and the next mileage at which maintenance is
#' due. Ordered so that next set of maintenance needs appear first.
#' If `current_mileage` is provided, a column `due_in` will be provided which
#' is the number of miles before the maintenance is due.
#' @import dplyr
#' @importFrom  magrittr %>%
#' @importFrom  purrr map
#' @export
maintenance_report <- function(maintenance_history,
current_mileage = NULL){
#Find the max Mileage and add the recommended mileage ----
items <- unique(maintenance_history$Item)
last_maintenance <- items %>%  map(function(itm){
maintenance_history %>%
filter(Item == itm) %>%
find_max_mileage()
}) %>% bind_rows()
due <- last_maintenance %>%
full_join(due_every, by = "Item") %>%
mutate(due = mileage_done + due_every) %>%
select(-due_every) %>%
arrange(due)
if(!is.null(current_mileage)){
due <- due %>%
mutate(due_in = due - current_mileage)
}
due %>% select(-one_of('notes'), one_of('notes'))
}
library(cruiser)
maintenance_report(maintenance_history, 169000)
maintenance_report(maintenance_history, 169000)
library(cruiser)
maintenance_report(maintenance_history, 169000)
library(cruiser)
maintenance_report(maintenance_history, 169000)
library(cruiser)
maintenance_report(maintenance_history, 169000)
